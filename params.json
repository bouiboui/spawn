{
  "name": "Spawn",
  "tagline": "Spawn and monitor processes from your command-line.",
  "body": "Recently I've worked on several projects that call micro-processes for simple tasks (sending JSON data to a webservice, uploading a file, sending an email) in bulk, with sensibly different arguments. Spawn is a command-line utility that makes these calls and displays the progress with a progress bar like so:\r\n\r\n```bash\r\n[Spawn] Starting 3 process(es)\r\n 1/3 [=========>------------------]  33% ('php' 'send_updates.php' 'data/client1.json') 4 secs/12 secs 1.2 MiB\r\n 2/3 [==================>---------]  66% ('php' 'send_updates.php' 'data/client2.json') 9 secs/14 secs 1.2 MiB\r\n 3/3 [============================] 100% ('php' 'send_updates.php' 'data/client3.json') 14 secs/14 secs 1.2 MiB\r\n```\r\n\r\n**Spawn is not intended to be launched from a remote server, only from your local command line.**\r\n\r\n\r\n## Install\r\n\r\n**Windows**\r\n\r\n[Download spawn.phar from the latest release](https://github.com/bouiboui/spawn/releases/download/0.3/spawn.phar)\r\n\r\n**Linux/MacOS**\r\n```bash\r\nwget https://github.com/bouiboui/spawn/releases/download/0.3/spawn.phar\r\nchmod +x spawn.phar\r\n\r\n# To call `spawn` from anywhere:\r\nsudo mv spawn.phar /usr/local/bin/spawn\r\n```\r\n\r\n\r\n## Usage\r\n\r\nRun a process with arguments separated by spaces\r\n``` bash\r\n./spawn.phar php send_latest_invoices.php startdate=2016-01-01\r\n\r\n[Spawn] Starting 1 process(es)\r\n 1/1 [============================] 100% ('php' 'send_latest_invoices.php' 'startdate=2016-01-01') 13 secs/13 secs 1.2 MiB\r\n```\r\nAdd a numerical range in the arguments\r\n``` bash\r\n./spawn.phar php convert_pdfs.php document{1-42}.pdf\r\n\r\n[Spawn] Starting 42 process(es)\r\n  4/42 [==>-------------------------]   9% ('php' 'convert_pdfs.php' 'document4.pdf') < 1 sec/< 1 sec 1.2 MiB\r\n  8/42 [=====>----------------------]  19% ('php' 'convert_pdfs.php' 'document8.pdf')  1 sec/5 secs 1.2 MiB\r\n 12/42 [========>-------------------]  28% ('php' 'convert_pdfs.php' 'document12.pdf') 2 secs/7 secs 1.2 MiB\r\n 16/42 [==========>-----------------]  38% ('php' 'convert_pdfs.php' 'document16.pdf') 3 secs/8 secs 1.2 MiB\r\n 20/42 [=============>--------------]  47% ('php' 'convert_pdfs.php' 'document20.pdf') 4 secs/8 secs 1.2 MiB\r\n 24/42 [================>-----------]  57% ('php' 'convert_pdfs.php' 'document24.pdf') 5 secs/9 secs 1.2 MiB\r\n 28/42 [==================>---------]  66% ('php' 'convert_pdfs.php' 'document28.pdf') 6 secs/9 secs 1.2 MiB\r\n 32/42 [=====================>------]  76% ('php' 'convert_pdfs.php' 'document32.pdf') 6 secs/8 secs 1.2 MiB\r\n 36/42 [========================>---]  85% ('php' 'convert_pdfs.php' 'document36.pdf') 7 secs/8 secs 1.2 MiB\r\n 40/42 [==========================>-]  95% ('php' 'convert_pdfs.php' 'document40.pdf') 8 secs/8 secs 1.2 MiB\r\n 42/42 [============================] 100% ('php' 'convert_pdfs.php' 'document42.pdf') 9 secs/9 secs 1.2 MiB\r\n\r\n```\r\nMake GET calls to an URL with a range\r\n```bash\r\n./spawn.phar curl http://webservice/api/v1/customers/{1-3}/\r\n\r\n[Spawn] Starting 3 process(es)\r\n 1/3 [=========>------------------]  33% ('curl' 'http://webservice/api/v1/customers/1/') 4 secs/12 secs 1.2 MiB\r\n 2/3 [==================>---------]  66% ('curl' 'http://webservice/api/v1/customers/2/') 5 secs/8 secs 1.2 MiB\r\n 3/3 [============================] 100% ('curl' 'http://webservice/api/v1/customers/3/') 9 secs/9 secs 1.2 MiB\r\n```\r\nPOST JSON files from a directory to an URL\r\n\r\n* Important: use `--` or Spawn will try to parse curl options\r\n* `-d @` before the filename sends the contents of the file\r\n```bash\r\n./spawn.phar -- curl -XPOST -H \"Content-type: application/json\" -d @json/invoices http://webservice/api/v1/invoices/\r\n\r\n[Spawn] Starting 3 process(es)\r\n 1/3 [=========>------------------]  33% (\"curl\" \"-XPOST\" \"-H\" \"Content-type: application/json\" \"-d\" \"@json/invoices/january-april.json\" \"http://webservice/api/v1/invoices/\")  1 sec/3 secs 1.2 MiB\r\n 2/3 [==================>---------]  66% (\"curl\" \"-XPOST\" \"-H\" \"Content-type: application/json\" \"-d\" \"@json/invoices/may-august.json\" \"http://webservice/api/v1/invoices/\")  1 sec/2 secs 1.5 MiB\r\n 3/3 [============================] 100% (\"curl\" \"-XPOST\" \"-H\" \"Content-type: application/json\" \"-d\" \"@json/invoices/september-december.json\" \"http://webservice/api/v1/invoices/\") 2 secs/2 secs 1.5 MiB\r\n```\r\nRun process for each file in a directory, filtered by the .json extension\r\n``` bash\r\n./spawn.phar php get_gravatar.php data/users --find=*.json\r\n\r\n[Spawn] Starting 3 process(es)\r\n 1/3 [=========>------------------]  33% ('php' 'get_gravatar.php' 'data/users/martin-fowler.json') 4 secs/12 secs 1.2 MiB\r\n 2/3 [==================>---------]  66% ('php' 'get_gravatar.php' 'data/users/rasmus-lerdorf.json') 5 secs/8 secs 1.2 MiB\r\n 3/3 [============================] 100% ('php' 'get_gravatar.php' 'data/users/aaron-saray.json') 9 secs/9 secs 1.2 MiB\r\n```\r\nSave output to a file\r\n``` bash\r\n./spawn.phar php get_twitter_handle.php data/users --outfile=handles.txt\r\n\r\n# handles.txt\r\n$ php get_twitter_handle.php \"data/users/martin-fowler.json\"\r\n@martinfowler\r\n\r\n$ php get_twitter_handle.php \"data/users/rasmus-lerdorf.json\"\r\n@rasmus\r\n\r\n$ php get_twitter_handle.php \"data/users/aaron-saray.json\"\r\n@aaronsaray\r\n```\r\nVerbose mode\r\n```bash\r\n./spawn.phar php tests/test.php tests/data -vvv\r\n\r\n[Spawn] Starting 3 process(es)\r\n  RUN  'php' 'tests/test.php' 'tests/data/1.txt'\r\n  OUT  Contents from 1.txt\r\n  RES  Command ran successfully\r\n 1/3 [=========>------------------]  33% ('php' 'tests/test.php' 'tests/data/1.txt') < 1 sec/< 1 sec 2.5 MiB  \r\n  RUN  'php' 'tests/test.php' 'tests/data/2.txt'\r\n  OUT  Contents from 2.txt\r\n  RES  Command ran successfully\r\n 2/3 [==================>---------]  66% ('php' 'tests/test.php' 'tests/data/2.txt') 2 secs/3 secs 2.5 MiB  \r\n  RUN  'php' 'tests/test.php' 'tests/data/3.txt'\r\n  OUT  Contents from 3.txt\r\n  RES  Command ran successfully\r\n 3/3 [============================] 100% ('php' 'tests/test.php' 'tests/data/3.txt') 3 secs/3 secs 2.5 MiB%   \r\n```\r\n\r\n## Credits\r\n\r\n- bouiboui — [Github](https://github.com/bouiboui) [Twitter](https://twitter.com/j_____________n) [Website](http://cod3.net)\r\n- [All contributors](https://github.com/bouiboui/spawn/graphs/contributors)\r\n\r\n\r\n## License\r\n\r\nUnlicense. Public domain, basically. Please treat it kindly. See [License File](LICENSE) for more information. \r\n\r\nThis project uses the following open source projects \r\n- [symfony/process](https://github.com/symfony/process) by [Fabien Potencier](https://github.com/fabpot) — [License](https://github.com/symfony/process/blob/master/LICENSE).\r\n- [symfony/console](https://github.com/symfony/console) by [Fabien Potencier](https://github.com/fabpot) — [License](https://github.com/symfony/console/blob/master/LICENSE).\r\n- [phpunit/phpunit](https://github.com/sebastianbergmann/phpunit) by [Sebastian Bergmann](https://github.com/sebastianbergmann) — [License](https://github.com/sebastianbergmann/phpunit/blob/master/LICENSE).\r\n\r\n\r\n\r\n[ico-version]: https://img.shields.io/packagist/v/:vendor/:package_name.svg?style=flat-square\r\n[ico-license]: https://img.shields.io/badge/license-Unlicense-brightgreen.svg?style=flat-square\r\n\r\n[link-packagist]: https://packagist.org/packages/:vendor/:package_name\r\n[link-author]: https://github.com/:author_username\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}